def SelectValueFromTarget(evaluatedNum, Targets):
    targetNum = str(evaluatedNum)
    target = list(str(evaluatedNum))
    message = str(",".join(target)) + " " + targetNum
    print("The numbers you can choose are below:")
    print(message)
    numToAdd = int(input("Enter which one: "))

    return numToAdd

def PlayGame(Targets, NumbersAllowed, TrainingGame, MaxTarget, MaxNumber):
    Score = 0
    GameOver = False
    while not GameOver:
        DisplayState(Targets, NumbersAllowed, Score)
        UserInput = input("Enter an expression: ")
        print()
        if CheckIfUserInputValid(UserInput):
            UserInputInRPN = ConvertToRPN(UserInput)
            if CheckNumbersUsedAreAllInNumbersAllowed(NumbersAllowed, UserInputInRPN, MaxNumber):
                IsTarget, Score, UserInputEvaluation = CheckIfUserInputEvaluationIsATarget(Targets, UserInputInRPN, Score)
                if IsTarget:
                    numToAdd = None
                    addNumInput = input("Do you want to add a new number?: ").lower()
                    if addNumInput == "y":
                        numToAdd = SelectValueFromTarget(UserInputEvaluation, Targets)
                        addNewNum = True
                    else:
                        addNewNum = False
                    NumbersAllowed = RemoveNumbersUsed(UserInput, MaxNumber, NumbersAllowed)
                    NumbersAllowed = FillNumbers(NumbersAllowed, TrainingGame, MaxNumber, numToAdd, addNewNum)
        Score -= 1
        if Targets[0] != -1:
            GameOver = True
        else:
            Targets = UpdateTargets(Targets, TrainingGame, MaxTarget)
    print("Game over!")
    DisplayScore(Score)


def CheckIfUserInputEvaluationIsATarget(Targets, UserInputInRPN, Score):
    UserInputEvaluation = EvaluateRPN(UserInputInRPN)
    UserInputEvaluationIsATarget = False
    if UserInputEvaluation != -1:
        for Count in range(0, len(Targets)):
            if Targets[Count] == UserInputEvaluation:
                Score += 2
                Targets[Count] = -1
                UserInputEvaluationIsATarget = True
    return UserInputEvaluationIsATarget, Score, UserInputEvaluation

def FillNumbers(NumbersAllowed, TrainingGame, MaxNumber, numToAdd, addNewNum):
    if TrainingGame:
        return [2, 3, 2, 8, 512]
    else:
        while len(NumbersAllowed) < 5:
            NumbersAllowed.append(GetNumber(MaxNumber))
        if addNewNum and numToAdd is not None:
            NumbersAllowed.append(numToAdd)

        return NumbersAllowed
