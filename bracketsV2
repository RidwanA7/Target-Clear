def ConvertToRPNWithBrackets(UserInput):
    stack = []
    queue = []
    precedence = {"+": 2, "-": 2, "*": 4, "/": 4}
    operands = ""
    for i in range(len(UserInput)):
        if UserInput[i] not in precedence and UserInput[i] != "(" and UserInput[i] != ")":
            operands += UserInput[i]
        else:
            if operands != "":
                queue.append(operands)
                operands = ""
            if UserInput[i] == "(":
                stack.append(UserInput[i])
            elif UserInput[i] == ")":
                while len(stack) > 0 and stack[-1] != "(":
                    queue.append(stack.pop())
                if len(stack) > 0 and stack[-1] == "(":
                    stack.pop()
            elif UserInput[i] in precedence:
                while (len(stack) > 0 and stack[-1] in precedence and precedence[UserInput[i]] <= precedence[stack[-1]]):
                        queue.append(stack.pop())
                stack.append(UserInput[i])
    if operands != "":
        queue.append(operands)
    while len(stack) > 0:
        queue.append(stack.pop())

    return queue

def CheckIfUserInputValid(UserInput):
    if re.search("^(\\(*[0-9]+\\)*[\\+\\-\\*\\/]\\)*)+([\\+\\-\\*\\/])*\\(*[0-9]+\\)*$", UserInput) is not None:
        return True
    else:
        return False
